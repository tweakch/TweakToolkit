//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.296.
//
#pragma warning disable 1591

namespace TweakToolkit.WCF.Test.CatWebservice
{
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "ImportSoap", Namespace = "http://www.cat-financial-files.ch")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class Import : System.Web.Services.Protocols.SoapHttpClientProtocol, IImport
    {
        private System.Threading.SendOrPostCallback writeProductOperationCompleted;

        private System.Threading.SendOrPostCallback writeProductV2OperationCompleted;

        private System.Threading.SendOrPostCallback writeBarrageOperationCompleted;

        private System.Threading.SendOrPostCallback writeBasevalueOperationCompleted;

        private System.Threading.SendOrPostCallback writeEventOperationCompleted;

        private System.Threading.SendOrPostCallback deleteProductByIDOperationCompleted;

        private System.Threading.SendOrPostCallback deleteProductByValorOperationCompleted;

        private System.Threading.SendOrPostCallback deleteBarrageOfProductByValorOperationCompleted;

        private System.Threading.SendOrPostCallback deleteAllBarragesOperationCompleted;

        private System.Threading.SendOrPostCallback deleteBasevaluesOfProductByValorOperationCompleted;

        private System.Threading.SendOrPostCallback deleteAllBasevaluesOperationCompleted;

        private System.Threading.SendOrPostCallback deleteEventsOfProductByValorOperationCompleted;

        private System.Threading.SendOrPostCallback deleteAllEventsOperationCompleted;

        private System.Threading.SendOrPostCallback writePriceOperationCompleted;

        private System.Threading.SendOrPostCallback deletePricesByValorOperationCompleted;

        private System.Threading.SendOrPostCallback clearDatabaseOperationCompleted;

        private System.Threading.SendOrPostCallback resetSystemOperationCompleted;

        private System.Threading.SendOrPostCallback writeEmittentenRatingWithLogoOperationCompleted;

        private System.Threading.SendOrPostCallback updateEmittentenRatingForIDOperationCompleted;

        private System.Threading.SendOrPostCallback deleteEmittentenRatingForNameOperationCompleted;

        private System.Threading.SendOrPostCallback deleteEmittentenRatingForIDOperationCompleted;

        private System.Threading.SendOrPostCallback deleteAllEmittentenRatingsOperationCompleted;

        private System.Threading.SendOrPostCallback deleteAllEmittentenRatingLogosFromDiskOperationCompleted;

        private System.Threading.SendOrPostCallback deleteAllEmittentenRatingLogosNotInDBOperationCompleted;

        private System.Threading.SendOrPostCallback isValidFileSizeOperationCompleted;

        private System.Threading.SendOrPostCallback getMaxFileSizeOperationCompleted;

        private System.Threading.SendOrPostCallback isValidExtensionOperationCompleted;

        private System.Threading.SendOrPostCallback getValidExtensionsOperationCompleted;

        private System.Threading.SendOrPostCallback saveFileOperationCompleted;

        private System.Threading.SendOrPostCallback deleteFileByIDOperationCompleted;

        private System.Threading.SendOrPostCallback deleteFileByServerNameOperationCompleted;

        private System.Threading.SendOrPostCallback deleteFileByOriginalNameOperationCompleted;

        private System.Threading.SendOrPostCallback deleteAllDBFilesOperationCompleted;

        private System.Threading.SendOrPostCallback deleteAllFilesNotInDBOperationCompleted;

        private System.Threading.SendOrPostCallback deleteAllFilesOfProductOperationCompleted;

        private System.Threading.SendOrPostCallback deleteAllFilesOperationCompleted;

        private System.Threading.SendOrPostCallback LoginOperationCompleted;

        private System.Threading.SendOrPostCallback GetLoginStatusOperationCompleted;

        private System.Threading.SendOrPostCallback isLoggedInOperationCompleted;

        private System.Threading.SendOrPostCallback LogoutOperationCompleted;

        private bool useDefaultCredentialsSetExplicitly;

        /// <remarks/>
        public Import()
        {
            this.Url = global::TweakToolkit.WCF.Test.Properties.Settings.Default.TweakToolkit_WCF_Test_CatWebservice_Import;
            if ((this.IsLocalFileSystemWebService(this.Url) == true))
            {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else
            {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        public new string Url
        {
            get
            {
                return base.Url;
            }
            set
            {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true)
                            && (this.useDefaultCredentialsSetExplicitly == false))
                            && (this.IsLocalFileSystemWebService(value) == false)))
                {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }

        public new bool UseDefaultCredentials
        {
            get
            {
                return base.UseDefaultCredentials;
            }
            set
            {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        /// <remarks/>
        public event writeProductCompletedEventHandler writeProductCompleted;

        /// <remarks/>
        public event writeProductV2CompletedEventHandler writeProductV2Completed;

        /// <remarks/>
        public event writeBarrageCompletedEventHandler writeBarrageCompleted;

        /// <remarks/>
        public event writeBasevalueCompletedEventHandler writeBasevalueCompleted;

        /// <remarks/>
        public event writeEventCompletedEventHandler writeEventCompleted;

        /// <remarks/>
        public event deleteProductByIDCompletedEventHandler deleteProductByIDCompleted;

        /// <remarks/>
        public event deleteProductByValorCompletedEventHandler deleteProductByValorCompleted;

        /// <remarks/>
        public event deleteBarrageOfProductByValorCompletedEventHandler deleteBarrageOfProductByValorCompleted;

        /// <remarks/>
        public event deleteAllBarragesCompletedEventHandler deleteAllBarragesCompleted;

        /// <remarks/>
        public event deleteBasevaluesOfProductByValorCompletedEventHandler deleteBasevaluesOfProductByValorCompleted;

        /// <remarks/>
        public event deleteAllBasevaluesCompletedEventHandler deleteAllBasevaluesCompleted;

        /// <remarks/>
        public event deleteEventsOfProductByValorCompletedEventHandler deleteEventsOfProductByValorCompleted;

        /// <remarks/>
        public event deleteAllEventsCompletedEventHandler deleteAllEventsCompleted;

        /// <remarks/>
        public event writePriceCompletedEventHandler writePriceCompleted;

        /// <remarks/>
        public event deletePricesByValorCompletedEventHandler deletePricesByValorCompleted;

        /// <remarks/>
        public event clearDatabaseCompletedEventHandler clearDatabaseCompleted;

        /// <remarks/>
        public event resetSystemCompletedEventHandler resetSystemCompleted;

        /// <remarks/>
        public event writeEmittentenRatingWithLogoCompletedEventHandler writeEmittentenRatingWithLogoCompleted;

        /// <remarks/>
        public event updateEmittentenRatingForIDCompletedEventHandler updateEmittentenRatingForIDCompleted;

        /// <remarks/>
        public event deleteEmittentenRatingForNameCompletedEventHandler deleteEmittentenRatingForNameCompleted;

        /// <remarks/>
        public event deleteEmittentenRatingForIDCompletedEventHandler deleteEmittentenRatingForIDCompleted;

        /// <remarks/>
        public event deleteAllEmittentenRatingsCompletedEventHandler deleteAllEmittentenRatingsCompleted;

        /// <remarks/>
        public event deleteAllEmittentenRatingLogosFromDiskCompletedEventHandler deleteAllEmittentenRatingLogosFromDiskCompleted;

        /// <remarks/>
        public event deleteAllEmittentenRatingLogosNotInDBCompletedEventHandler deleteAllEmittentenRatingLogosNotInDBCompleted;

        /// <remarks/>
        public event isValidFileSizeCompletedEventHandler isValidFileSizeCompleted;

        /// <remarks/>
        public event getMaxFileSizeCompletedEventHandler getMaxFileSizeCompleted;

        /// <remarks/>
        public event isValidExtensionCompletedEventHandler isValidExtensionCompleted;

        /// <remarks/>
        public event getValidExtensionsCompletedEventHandler getValidExtensionsCompleted;

        /// <remarks/>
        public event saveFileCompletedEventHandler saveFileCompleted;

        /// <remarks/>
        public event deleteFileByIDCompletedEventHandler deleteFileByIDCompleted;

        /// <remarks/>
        public event deleteFileByServerNameCompletedEventHandler deleteFileByServerNameCompleted;

        /// <remarks/>
        public event deleteFileByOriginalNameCompletedEventHandler deleteFileByOriginalNameCompleted;

        /// <remarks/>
        public event deleteAllDBFilesCompletedEventHandler deleteAllDBFilesCompleted;

        /// <remarks/>
        public event deleteAllFilesNotInDBCompletedEventHandler deleteAllFilesNotInDBCompleted;

        /// <remarks/>
        public event deleteAllFilesOfProductCompletedEventHandler deleteAllFilesOfProductCompleted;

        /// <remarks/>
        public event deleteAllFilesCompletedEventHandler deleteAllFilesCompleted;

        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;

        /// <remarks/>
        public event GetLoginStatusCompletedEventHandler GetLoginStatusCompleted;

        /// <remarks/>
        public event isLoggedInCompletedEventHandler isLoggedInCompleted;

        /// <remarks/>
        public event LogoutCompletedEventHandler LogoutCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/writeProduct", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] writeProduct(
                    int valor,
                    string name,
                    string waehrung,
                    string waehrungsrisiko,
                    string preisangabe_dirty,
                    string garant,
                    string lead_manager,
                    string emittent,
                    string anlageklasse,
                    string produkte_kat,
                    string produkte_typ,
                    string isin,
                    string boersenplatz,
                    string preisangabe,
                    System.DateTime valuta,
                    string emissionspreis,
                    string nominal,
                    System.DateTime rueckzahlung,
                    System.DateTime anfangsfixierung,
                    System.DateTime schlussfixierung,
                    string coupon_garantiert,
                    string cp_garant,
                    string coupon_bedingt,
                    string text_bed_coupon,
                    string cp_bedingt,
                    string floater,
                    string cp_floater,
                    string text_floater,
                    string min_coupon,
                    string max_coupon,
                    string text_coupon,
                    string call_daten,
                    string fruehz_rueckz,
                    string text_fruez_rueckz,
                    string cap,
                    string max_rueckzahlung,
                    string text_max_rueckz,
                    string schutz,
                    string schutztyp,
                    string min_rueckzahlung,
                    string partizipation,
                    string partizipation_text,
                    string discount,
                    string max_rendite,
                    string bonus_level,
                    string emittent_kurz,
                    string produkt_status,
                    int produkte_kat_id,
                    int podukte_typ_id)
        {
            object[] results = this.Invoke("writeProduct", new object[] {
                        valor,
                        name,
                        waehrung,
                        waehrungsrisiko,
                        preisangabe_dirty,
                        garant,
                        lead_manager,
                        emittent,
                        anlageklasse,
                        produkte_kat,
                        produkte_typ,
                        isin,
                        boersenplatz,
                        preisangabe,
                        valuta,
                        emissionspreis,
                        nominal,
                        rueckzahlung,
                        anfangsfixierung,
                        schlussfixierung,
                        coupon_garantiert,
                        cp_garant,
                        coupon_bedingt,
                        text_bed_coupon,
                        cp_bedingt,
                        floater,
                        cp_floater,
                        text_floater,
                        min_coupon,
                        max_coupon,
                        text_coupon,
                        call_daten,
                        fruehz_rueckz,
                        text_fruez_rueckz,
                        cap,
                        max_rueckzahlung,
                        text_max_rueckz,
                        schutz,
                        schutztyp,
                        min_rueckzahlung,
                        partizipation,
                        partizipation_text,
                        discount,
                        max_rendite,
                        bonus_level,
                        emittent_kurz,
                        produkt_status,
                        produkte_kat_id,
                        podukte_typ_id});
            return ((object[])(results[0]));
        }

        /// <remarks/>
        public void writeProductAsync(
                    int valor,
                    string name,
                    string waehrung,
                    string waehrungsrisiko,
                    string preisangabe_dirty,
                    string garant,
                    string lead_manager,
                    string emittent,
                    string anlageklasse,
                    string produkte_kat,
                    string produkte_typ,
                    string isin,
                    string boersenplatz,
                    string preisangabe,
                    System.DateTime valuta,
                    string emissionspreis,
                    string nominal,
                    System.DateTime rueckzahlung,
                    System.DateTime anfangsfixierung,
                    System.DateTime schlussfixierung,
                    string coupon_garantiert,
                    string cp_garant,
                    string coupon_bedingt,
                    string text_bed_coupon,
                    string cp_bedingt,
                    string floater,
                    string cp_floater,
                    string text_floater,
                    string min_coupon,
                    string max_coupon,
                    string text_coupon,
                    string call_daten,
                    string fruehz_rueckz,
                    string text_fruez_rueckz,
                    string cap,
                    string max_rueckzahlung,
                    string text_max_rueckz,
                    string schutz,
                    string schutztyp,
                    string min_rueckzahlung,
                    string partizipation,
                    string partizipation_text,
                    string discount,
                    string max_rendite,
                    string bonus_level,
                    string emittent_kurz,
                    string produkt_status,
                    int produkte_kat_id,
                    int podukte_typ_id)
        {
            this.writeProductAsync(valor, name, waehrung, waehrungsrisiko, preisangabe_dirty, garant, lead_manager, emittent, anlageklasse, produkte_kat, produkte_typ, isin, boersenplatz, preisangabe, valuta, emissionspreis, nominal, rueckzahlung, anfangsfixierung, schlussfixierung, coupon_garantiert, cp_garant, coupon_bedingt, text_bed_coupon, cp_bedingt, floater, cp_floater, text_floater, min_coupon, max_coupon, text_coupon, call_daten, fruehz_rueckz, text_fruez_rueckz, cap, max_rueckzahlung, text_max_rueckz, schutz, schutztyp, min_rueckzahlung, partizipation, partizipation_text, discount, max_rendite, bonus_level, emittent_kurz, produkt_status, produkte_kat_id, podukte_typ_id, null);
        }

        /// <remarks/>
        public void writeProductAsync(
                    int valor,
                    string name,
                    string waehrung,
                    string waehrungsrisiko,
                    string preisangabe_dirty,
                    string garant,
                    string lead_manager,
                    string emittent,
                    string anlageklasse,
                    string produkte_kat,
                    string produkte_typ,
                    string isin,
                    string boersenplatz,
                    string preisangabe,
                    System.DateTime valuta,
                    string emissionspreis,
                    string nominal,
                    System.DateTime rueckzahlung,
                    System.DateTime anfangsfixierung,
                    System.DateTime schlussfixierung,
                    string coupon_garantiert,
                    string cp_garant,
                    string coupon_bedingt,
                    string text_bed_coupon,
                    string cp_bedingt,
                    string floater,
                    string cp_floater,
                    string text_floater,
                    string min_coupon,
                    string max_coupon,
                    string text_coupon,
                    string call_daten,
                    string fruehz_rueckz,
                    string text_fruez_rueckz,
                    string cap,
                    string max_rueckzahlung,
                    string text_max_rueckz,
                    string schutz,
                    string schutztyp,
                    string min_rueckzahlung,
                    string partizipation,
                    string partizipation_text,
                    string discount,
                    string max_rendite,
                    string bonus_level,
                    string emittent_kurz,
                    string produkt_status,
                    int produkte_kat_id,
                    int podukte_typ_id,
                    object userState)
        {
            if ((this.writeProductOperationCompleted == null))
            {
                this.writeProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwriteProductOperationCompleted);
            }
            this.InvokeAsync("writeProduct", new object[] {
                        valor,
                        name,
                        waehrung,
                        waehrungsrisiko,
                        preisangabe_dirty,
                        garant,
                        lead_manager,
                        emittent,
                        anlageklasse,
                        produkte_kat,
                        produkte_typ,
                        isin,
                        boersenplatz,
                        preisangabe,
                        valuta,
                        emissionspreis,
                        nominal,
                        rueckzahlung,
                        anfangsfixierung,
                        schlussfixierung,
                        coupon_garantiert,
                        cp_garant,
                        coupon_bedingt,
                        text_bed_coupon,
                        cp_bedingt,
                        floater,
                        cp_floater,
                        text_floater,
                        min_coupon,
                        max_coupon,
                        text_coupon,
                        call_daten,
                        fruehz_rueckz,
                        text_fruez_rueckz,
                        cap,
                        max_rueckzahlung,
                        text_max_rueckz,
                        schutz,
                        schutztyp,
                        min_rueckzahlung,
                        partizipation,
                        partizipation_text,
                        discount,
                        max_rendite,
                        bonus_level,
                        emittent_kurz,
                        produkt_status,
                        produkte_kat_id,
                        podukte_typ_id}, this.writeProductOperationCompleted, userState);
        }

        private void OnwriteProductOperationCompleted(object arg)
        {
            if ((this.writeProductCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.writeProductCompleted(this, new writeProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/writeProductV2", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] writeProductV2(
                    int valor,
                    string name,
                    string waehrung,
                    string waehrungsrisiko,
                    string preisangabe_dirty,
                    string garant,
                    string lead_manager,
                    string emittent,
                    string anlageklasse,
                    string produkte_kat,
                    string produkte_typ,
                    string isin,
                    string boersenplatz,
                    string preisangabe,
                    System.DateTime valuta,
                    string emissionspreis,
                    string nominal,
                    System.DateTime rueckzahlung,
                    System.DateTime anfangsfixierung,
                    System.DateTime schlussfixierung,
                    string coupon_garantiert,
                    string cp_garant,
                    string coupon_bedingt,
                    string text_bed_coupon,
                    string cp_bedingt,
                    string floater,
                    string cp_floater,
                    string text_floater,
                    string min_coupon,
                    string max_coupon,
                    string text_coupon,
                    string call_daten,
                    string fruehz_rueckz,
                    string text_fruez_rueckz,
                    string cap,
                    string max_rueckzahlung,
                    string text_max_rueckz,
                    string schutz,
                    string schutztyp,
                    string min_rueckzahlung,
                    string partizipation,
                    string partizipation_text,
                    string discount,
                    string max_rendite,
                    string bonus_level,
                    string emittent_kurz,
                    string produkt_status,
                    int produkte_kat_id,
                    int podukte_typ_id,
                    string emissionstyp,
                    string symbol,
                    string klHandelbEinheit,
                    string struktur1_zusatz_text,
                    string struktur1_zusatz_wert,
                    string struktur2_zusatz_text,
                    string struktur2_zusatz_wert,
                    string struktur3_zusatz_text,
                    string struktur3_zusatz_wert,
                    string name_eng,
                    string waehrungsrisiko_eng,
                    string anlageklasse_eng,
                    string produkte_kat_eng,
                    string produkte_typ_eng,
                    string preisangabe_eng,
                    string cp_garant_eng,
                    string cp_bedingt_eng,
                    string cp_floater_eng,
                    string call_daten_eng,
                    string fruehz_rueckz_eng,
                    string coupon_garantiert_eng,
                    string coupon_bedingt_eng,
                    string text_bed_coupon_eng,
                    string floater_eng,
                    string text_floater_eng,
                    string min_coupon_eng,
                    string max_coupon_eng,
                    string text_coupon_eng,
                    string text_fruez_rueckz_eng,
                    string cap_eng,
                    string max_rueckzahlung_eng,
                    string text_max_rueckz_eng,
                    string schutz_eng,
                    string min_rueckzahlung_eng,
                    string partizipation_eng,
                    string partizipation_text_eng,
                    string discount_eng,
                    string max_rendite_eng,
                    string bonus_level_eng,
                    string struktur1_zusatz_text_eng,
                    string struktur1_zusatz_wert_eng,
                    string struktur2_zusatz_text_eng,
                    string struktur2_zusatz_wert_eng,
                    string struktur3_zusatz_text_eng,
                    string struktur3_zusatz_wert_eng,
                    bool hasEnglish)
        {
            object[] results = this.Invoke("writeProductV2", new object[] {
                        valor,
                        name,
                        waehrung,
                        waehrungsrisiko,
                        preisangabe_dirty,
                        garant,
                        lead_manager,
                        emittent,
                        anlageklasse,
                        produkte_kat,
                        produkte_typ,
                        isin,
                        boersenplatz,
                        preisangabe,
                        valuta,
                        emissionspreis,
                        nominal,
                        rueckzahlung,
                        anfangsfixierung,
                        schlussfixierung,
                        coupon_garantiert,
                        cp_garant,
                        coupon_bedingt,
                        text_bed_coupon,
                        cp_bedingt,
                        floater,
                        cp_floater,
                        text_floater,
                        min_coupon,
                        max_coupon,
                        text_coupon,
                        call_daten,
                        fruehz_rueckz,
                        text_fruez_rueckz,
                        cap,
                        max_rueckzahlung,
                        text_max_rueckz,
                        schutz,
                        schutztyp,
                        min_rueckzahlung,
                        partizipation,
                        partizipation_text,
                        discount,
                        max_rendite,
                        bonus_level,
                        emittent_kurz,
                        produkt_status,
                        produkte_kat_id,
                        podukte_typ_id,
                        emissionstyp,
                        symbol,
                        klHandelbEinheit,
                        struktur1_zusatz_text,
                        struktur1_zusatz_wert,
                        struktur2_zusatz_text,
                        struktur2_zusatz_wert,
                        struktur3_zusatz_text,
                        struktur3_zusatz_wert,
                        name_eng,
                        waehrungsrisiko_eng,
                        anlageklasse_eng,
                        produkte_kat_eng,
                        produkte_typ_eng,
                        preisangabe_eng,
                        cp_garant_eng,
                        cp_bedingt_eng,
                        cp_floater_eng,
                        call_daten_eng,
                        fruehz_rueckz_eng,
                        coupon_garantiert_eng,
                        coupon_bedingt_eng,
                        text_bed_coupon_eng,
                        floater_eng,
                        text_floater_eng,
                        min_coupon_eng,
                        max_coupon_eng,
                        text_coupon_eng,
                        text_fruez_rueckz_eng,
                        cap_eng,
                        max_rueckzahlung_eng,
                        text_max_rueckz_eng,
                        schutz_eng,
                        min_rueckzahlung_eng,
                        partizipation_eng,
                        partizipation_text_eng,
                        discount_eng,
                        max_rendite_eng,
                        bonus_level_eng,
                        struktur1_zusatz_text_eng,
                        struktur1_zusatz_wert_eng,
                        struktur2_zusatz_text_eng,
                        struktur2_zusatz_wert_eng,
                        struktur3_zusatz_text_eng,
                        struktur3_zusatz_wert_eng,
                        hasEnglish});
            return ((object[])(results[0]));
        }

        /// <remarks/>
        public void writeProductV2Async(
                    int valor,
                    string name,
                    string waehrung,
                    string waehrungsrisiko,
                    string preisangabe_dirty,
                    string garant,
                    string lead_manager,
                    string emittent,
                    string anlageklasse,
                    string produkte_kat,
                    string produkte_typ,
                    string isin,
                    string boersenplatz,
                    string preisangabe,
                    System.DateTime valuta,
                    string emissionspreis,
                    string nominal,
                    System.DateTime rueckzahlung,
                    System.DateTime anfangsfixierung,
                    System.DateTime schlussfixierung,
                    string coupon_garantiert,
                    string cp_garant,
                    string coupon_bedingt,
                    string text_bed_coupon,
                    string cp_bedingt,
                    string floater,
                    string cp_floater,
                    string text_floater,
                    string min_coupon,
                    string max_coupon,
                    string text_coupon,
                    string call_daten,
                    string fruehz_rueckz,
                    string text_fruez_rueckz,
                    string cap,
                    string max_rueckzahlung,
                    string text_max_rueckz,
                    string schutz,
                    string schutztyp,
                    string min_rueckzahlung,
                    string partizipation,
                    string partizipation_text,
                    string discount,
                    string max_rendite,
                    string bonus_level,
                    string emittent_kurz,
                    string produkt_status,
                    int produkte_kat_id,
                    int podukte_typ_id,
                    string emissionstyp,
                    string symbol,
                    string klHandelbEinheit,
                    string struktur1_zusatz_text,
                    string struktur1_zusatz_wert,
                    string struktur2_zusatz_text,
                    string struktur2_zusatz_wert,
                    string struktur3_zusatz_text,
                    string struktur3_zusatz_wert,
                    string name_eng,
                    string waehrungsrisiko_eng,
                    string anlageklasse_eng,
                    string produkte_kat_eng,
                    string produkte_typ_eng,
                    string preisangabe_eng,
                    string cp_garant_eng,
                    string cp_bedingt_eng,
                    string cp_floater_eng,
                    string call_daten_eng,
                    string fruehz_rueckz_eng,
                    string coupon_garantiert_eng,
                    string coupon_bedingt_eng,
                    string text_bed_coupon_eng,
                    string floater_eng,
                    string text_floater_eng,
                    string min_coupon_eng,
                    string max_coupon_eng,
                    string text_coupon_eng,
                    string text_fruez_rueckz_eng,
                    string cap_eng,
                    string max_rueckzahlung_eng,
                    string text_max_rueckz_eng,
                    string schutz_eng,
                    string min_rueckzahlung_eng,
                    string partizipation_eng,
                    string partizipation_text_eng,
                    string discount_eng,
                    string max_rendite_eng,
                    string bonus_level_eng,
                    string struktur1_zusatz_text_eng,
                    string struktur1_zusatz_wert_eng,
                    string struktur2_zusatz_text_eng,
                    string struktur2_zusatz_wert_eng,
                    string struktur3_zusatz_text_eng,
                    string struktur3_zusatz_wert_eng,
                    bool hasEnglish)
        {
            this.writeProductV2Async(valor, name, waehrung, waehrungsrisiko, preisangabe_dirty, garant, lead_manager, emittent, anlageklasse, produkte_kat, produkte_typ, isin, boersenplatz, preisangabe, valuta, emissionspreis, nominal, rueckzahlung, anfangsfixierung, schlussfixierung, coupon_garantiert, cp_garant, coupon_bedingt, text_bed_coupon, cp_bedingt, floater, cp_floater, text_floater, min_coupon, max_coupon, text_coupon, call_daten, fruehz_rueckz, text_fruez_rueckz, cap, max_rueckzahlung, text_max_rueckz, schutz, schutztyp, min_rueckzahlung, partizipation, partizipation_text, discount, max_rendite, bonus_level, emittent_kurz, produkt_status, produkte_kat_id, podukte_typ_id, emissionstyp, symbol, klHandelbEinheit, struktur1_zusatz_text, struktur1_zusatz_wert, struktur2_zusatz_text, struktur2_zusatz_wert, struktur3_zusatz_text, struktur3_zusatz_wert, name_eng, waehrungsrisiko_eng, anlageklasse_eng, produkte_kat_eng, produkte_typ_eng, preisangabe_eng, cp_garant_eng, cp_bedingt_eng, cp_floater_eng, call_daten_eng, fruehz_rueckz_eng, coupon_garantiert_eng, coupon_bedingt_eng, text_bed_coupon_eng, floater_eng, text_floater_eng, min_coupon_eng, max_coupon_eng, text_coupon_eng, text_fruez_rueckz_eng, cap_eng, max_rueckzahlung_eng, text_max_rueckz_eng, schutz_eng, min_rueckzahlung_eng, partizipation_eng, partizipation_text_eng, discount_eng, max_rendite_eng, bonus_level_eng, struktur1_zusatz_text_eng, struktur1_zusatz_wert_eng, struktur2_zusatz_text_eng, struktur2_zusatz_wert_eng, struktur3_zusatz_text_eng, struktur3_zusatz_wert_eng, hasEnglish, null);
        }

        /// <remarks/>
        public void writeProductV2Async(
                    int valor,
                    string name,
                    string waehrung,
                    string waehrungsrisiko,
                    string preisangabe_dirty,
                    string garant,
                    string lead_manager,
                    string emittent,
                    string anlageklasse,
                    string produkte_kat,
                    string produkte_typ,
                    string isin,
                    string boersenplatz,
                    string preisangabe,
                    System.DateTime valuta,
                    string emissionspreis,
                    string nominal,
                    System.DateTime rueckzahlung,
                    System.DateTime anfangsfixierung,
                    System.DateTime schlussfixierung,
                    string coupon_garantiert,
                    string cp_garant,
                    string coupon_bedingt,
                    string text_bed_coupon,
                    string cp_bedingt,
                    string floater,
                    string cp_floater,
                    string text_floater,
                    string min_coupon,
                    string max_coupon,
                    string text_coupon,
                    string call_daten,
                    string fruehz_rueckz,
                    string text_fruez_rueckz,
                    string cap,
                    string max_rueckzahlung,
                    string text_max_rueckz,
                    string schutz,
                    string schutztyp,
                    string min_rueckzahlung,
                    string partizipation,
                    string partizipation_text,
                    string discount,
                    string max_rendite,
                    string bonus_level,
                    string emittent_kurz,
                    string produkt_status,
                    int produkte_kat_id,
                    int podukte_typ_id,
                    string emissionstyp,
                    string symbol,
                    string klHandelbEinheit,
                    string struktur1_zusatz_text,
                    string struktur1_zusatz_wert,
                    string struktur2_zusatz_text,
                    string struktur2_zusatz_wert,
                    string struktur3_zusatz_text,
                    string struktur3_zusatz_wert,
                    string name_eng,
                    string waehrungsrisiko_eng,
                    string anlageklasse_eng,
                    string produkte_kat_eng,
                    string produkte_typ_eng,
                    string preisangabe_eng,
                    string cp_garant_eng,
                    string cp_bedingt_eng,
                    string cp_floater_eng,
                    string call_daten_eng,
                    string fruehz_rueckz_eng,
                    string coupon_garantiert_eng,
                    string coupon_bedingt_eng,
                    string text_bed_coupon_eng,
                    string floater_eng,
                    string text_floater_eng,
                    string min_coupon_eng,
                    string max_coupon_eng,
                    string text_coupon_eng,
                    string text_fruez_rueckz_eng,
                    string cap_eng,
                    string max_rueckzahlung_eng,
                    string text_max_rueckz_eng,
                    string schutz_eng,
                    string min_rueckzahlung_eng,
                    string partizipation_eng,
                    string partizipation_text_eng,
                    string discount_eng,
                    string max_rendite_eng,
                    string bonus_level_eng,
                    string struktur1_zusatz_text_eng,
                    string struktur1_zusatz_wert_eng,
                    string struktur2_zusatz_text_eng,
                    string struktur2_zusatz_wert_eng,
                    string struktur3_zusatz_text_eng,
                    string struktur3_zusatz_wert_eng,
                    bool hasEnglish,
                    object userState)
        {
            if ((this.writeProductV2OperationCompleted == null))
            {
                this.writeProductV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnwriteProductV2OperationCompleted);
            }
            this.InvokeAsync("writeProductV2", new object[] {
                        valor,
                        name,
                        waehrung,
                        waehrungsrisiko,
                        preisangabe_dirty,
                        garant,
                        lead_manager,
                        emittent,
                        anlageklasse,
                        produkte_kat,
                        produkte_typ,
                        isin,
                        boersenplatz,
                        preisangabe,
                        valuta,
                        emissionspreis,
                        nominal,
                        rueckzahlung,
                        anfangsfixierung,
                        schlussfixierung,
                        coupon_garantiert,
                        cp_garant,
                        coupon_bedingt,
                        text_bed_coupon,
                        cp_bedingt,
                        floater,
                        cp_floater,
                        text_floater,
                        min_coupon,
                        max_coupon,
                        text_coupon,
                        call_daten,
                        fruehz_rueckz,
                        text_fruez_rueckz,
                        cap,
                        max_rueckzahlung,
                        text_max_rueckz,
                        schutz,
                        schutztyp,
                        min_rueckzahlung,
                        partizipation,
                        partizipation_text,
                        discount,
                        max_rendite,
                        bonus_level,
                        emittent_kurz,
                        produkt_status,
                        produkte_kat_id,
                        podukte_typ_id,
                        emissionstyp,
                        symbol,
                        klHandelbEinheit,
                        struktur1_zusatz_text,
                        struktur1_zusatz_wert,
                        struktur2_zusatz_text,
                        struktur2_zusatz_wert,
                        struktur3_zusatz_text,
                        struktur3_zusatz_wert,
                        name_eng,
                        waehrungsrisiko_eng,
                        anlageklasse_eng,
                        produkte_kat_eng,
                        produkte_typ_eng,
                        preisangabe_eng,
                        cp_garant_eng,
                        cp_bedingt_eng,
                        cp_floater_eng,
                        call_daten_eng,
                        fruehz_rueckz_eng,
                        coupon_garantiert_eng,
                        coupon_bedingt_eng,
                        text_bed_coupon_eng,
                        floater_eng,
                        text_floater_eng,
                        min_coupon_eng,
                        max_coupon_eng,
                        text_coupon_eng,
                        text_fruez_rueckz_eng,
                        cap_eng,
                        max_rueckzahlung_eng,
                        text_max_rueckz_eng,
                        schutz_eng,
                        min_rueckzahlung_eng,
                        partizipation_eng,
                        partizipation_text_eng,
                        discount_eng,
                        max_rendite_eng,
                        bonus_level_eng,
                        struktur1_zusatz_text_eng,
                        struktur1_zusatz_wert_eng,
                        struktur2_zusatz_text_eng,
                        struktur2_zusatz_wert_eng,
                        struktur3_zusatz_text_eng,
                        struktur3_zusatz_wert_eng,
                        hasEnglish}, this.writeProductV2OperationCompleted, userState);
        }

        private void OnwriteProductV2OperationCompleted(object arg)
        {
            if ((this.writeProductV2Completed != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.writeProductV2Completed(this, new writeProductV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/writeBarrage", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] writeBarrage(int valor, string name, decimal barriere, string ausloeser, string beobachtung, string settlement, string name_eng, string ausloeser_eng, string beobachtung_eng, string settlement_eng)
        {
            object[] results = this.Invoke("writeBarrage", new object[] {
                        valor,
                        name,
                        barriere,
                        ausloeser,
                        beobachtung,
                        settlement,
                        name_eng,
                        ausloeser_eng,
                        beobachtung_eng,
                        settlement_eng});
            return ((object[])(results[0]));
        }

        /// <remarks/>
        public void writeBarrageAsync(int valor, string name, decimal barriere, string ausloeser, string beobachtung, string settlement, string name_eng, string ausloeser_eng, string beobachtung_eng, string settlement_eng)
        {
            this.writeBarrageAsync(valor, name, barriere, ausloeser, beobachtung, settlement, name_eng, ausloeser_eng, beobachtung_eng, settlement_eng, null);
        }

        /// <remarks/>
        public void writeBarrageAsync(int valor, string name, decimal barriere, string ausloeser, string beobachtung, string settlement, string name_eng, string ausloeser_eng, string beobachtung_eng, string settlement_eng, object userState)
        {
            if ((this.writeBarrageOperationCompleted == null))
            {
                this.writeBarrageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwriteBarrageOperationCompleted);
            }
            this.InvokeAsync("writeBarrage", new object[] {
                        valor,
                        name,
                        barriere,
                        ausloeser,
                        beobachtung,
                        settlement,
                        name_eng,
                        ausloeser_eng,
                        beobachtung_eng,
                        settlement_eng}, this.writeBarrageOperationCompleted, userState);
        }

        private void OnwriteBarrageOperationCompleted(object arg)
        {
            if ((this.writeBarrageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.writeBarrageCompleted(this, new writeBarrageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/writeBasevalue", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] writeBasevalue(int valor, string name)
        {
            object[] results = this.Invoke("writeBasevalue", new object[] {
                        valor,
                        name});
            return ((object[])(results[0]));
        }

        /// <remarks/>
        public void writeBasevalueAsync(int valor, string name)
        {
            this.writeBasevalueAsync(valor, name, null);
        }

        /// <remarks/>
        public void writeBasevalueAsync(int valor, string name, object userState)
        {
            if ((this.writeBasevalueOperationCompleted == null))
            {
                this.writeBasevalueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwriteBasevalueOperationCompleted);
            }
            this.InvokeAsync("writeBasevalue", new object[] {
                        valor,
                        name}, this.writeBasevalueOperationCompleted, userState);
        }

        private void OnwriteBasevalueOperationCompleted(object arg)
        {
            if ((this.writeBasevalueCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.writeBasevalueCompleted(this, new writeBasevalueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/writeEvent", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] writeEvent(int valor, System.DateTime beobachtungs_datum, string event_typ, System.DateTime event_valuta_datum, string periode_name, System.DateTime periode_start, System.DateTime periode_ende, string beschreibung, string event_typ_eng, string periode_name_eng, string beschreibung_eng)
        {
            object[] results = this.Invoke("writeEvent", new object[] {
                        valor,
                        beobachtungs_datum,
                        event_typ,
                        event_valuta_datum,
                        periode_name,
                        periode_start,
                        periode_ende,
                        beschreibung,
                        event_typ_eng,
                        periode_name_eng,
                        beschreibung_eng});
            return ((object[])(results[0]));
        }

        /// <remarks/>
        public void writeEventAsync(int valor, System.DateTime beobachtungs_datum, string event_typ, System.DateTime event_valuta_datum, string periode_name, System.DateTime periode_start, System.DateTime periode_ende, string beschreibung, string event_typ_eng, string periode_name_eng, string beschreibung_eng)
        {
            this.writeEventAsync(valor, beobachtungs_datum, event_typ, event_valuta_datum, periode_name, periode_start, periode_ende, beschreibung, event_typ_eng, periode_name_eng, beschreibung_eng, null);
        }

        /// <remarks/>
        public void writeEventAsync(int valor, System.DateTime beobachtungs_datum, string event_typ, System.DateTime event_valuta_datum, string periode_name, System.DateTime periode_start, System.DateTime periode_ende, string beschreibung, string event_typ_eng, string periode_name_eng, string beschreibung_eng, object userState)
        {
            if ((this.writeEventOperationCompleted == null))
            {
                this.writeEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwriteEventOperationCompleted);
            }
            this.InvokeAsync("writeEvent", new object[] {
                        valor,
                        beobachtungs_datum,
                        event_typ,
                        event_valuta_datum,
                        periode_name,
                        periode_start,
                        periode_ende,
                        beschreibung,
                        event_typ_eng,
                        periode_name_eng,
                        beschreibung_eng}, this.writeEventOperationCompleted, userState);
        }

        private void OnwriteEventOperationCompleted(object arg)
        {
            if ((this.writeEventCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.writeEventCompleted(this, new writeEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/deleteProductByID", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] deleteProductByID(int ID)
        {
            object[] results = this.Invoke("deleteProductByID", new object[] {
                        ID});
            return ((object[])(results[0]));
        }

        /// <remarks/>
        public void deleteProductByIDAsync(int ID)
        {
            this.deleteProductByIDAsync(ID, null);
        }

        /// <remarks/>
        public void deleteProductByIDAsync(int ID, object userState)
        {
            if ((this.deleteProductByIDOperationCompleted == null))
            {
                this.deleteProductByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteProductByIDOperationCompleted);
            }
            this.InvokeAsync("deleteProductByID", new object[] {
                        ID}, this.deleteProductByIDOperationCompleted, userState);
        }

        private void OndeleteProductByIDOperationCompleted(object arg)
        {
            if ((this.deleteProductByIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteProductByIDCompleted(this, new deleteProductByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/deleteProductByValor", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] deleteProductByValor(int Valor)
        {
            object[] results = this.Invoke("deleteProductByValor", new object[] {
                        Valor});
            return ((object[])(results[0]));
        }

        /// <remarks/>
        public void deleteProductByValorAsync(int Valor)
        {
            this.deleteProductByValorAsync(Valor, null);
        }

        /// <remarks/>
        public void deleteProductByValorAsync(int Valor, object userState)
        {
            if ((this.deleteProductByValorOperationCompleted == null))
            {
                this.deleteProductByValorOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteProductByValorOperationCompleted);
            }
            this.InvokeAsync("deleteProductByValor", new object[] {
                        Valor}, this.deleteProductByValorOperationCompleted, userState);
        }

        private void OndeleteProductByValorOperationCompleted(object arg)
        {
            if ((this.deleteProductByValorCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteProductByValorCompleted(this, new deleteProductByValorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/deleteBarrageOfProductByValor", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] deleteBarrageOfProductByValor(int Valor)
        {
            object[] results = this.Invoke("deleteBarrageOfProductByValor", new object[] {
                        Valor});
            return ((object[])(results[0]));
        }

        /// <remarks/>
        public void deleteBarrageOfProductByValorAsync(int Valor)
        {
            this.deleteBarrageOfProductByValorAsync(Valor, null);
        }

        /// <remarks/>
        public void deleteBarrageOfProductByValorAsync(int Valor, object userState)
        {
            if ((this.deleteBarrageOfProductByValorOperationCompleted == null))
            {
                this.deleteBarrageOfProductByValorOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteBarrageOfProductByValorOperationCompleted);
            }
            this.InvokeAsync("deleteBarrageOfProductByValor", new object[] {
                        Valor}, this.deleteBarrageOfProductByValorOperationCompleted, userState);
        }

        private void OndeleteBarrageOfProductByValorOperationCompleted(object arg)
        {
            if ((this.deleteBarrageOfProductByValorCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteBarrageOfProductByValorCompleted(this, new deleteBarrageOfProductByValorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/deleteAllBarrages", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] deleteAllBarrages()
        {
            object[] results = this.Invoke("deleteAllBarrages", new object[0]);
            return ((object[])(results[0]));
        }

        /// <remarks/>
        public void deleteAllBarragesAsync()
        {
            this.deleteAllBarragesAsync(null);
        }

        /// <remarks/>
        public void deleteAllBarragesAsync(object userState)
        {
            if ((this.deleteAllBarragesOperationCompleted == null))
            {
                this.deleteAllBarragesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAllBarragesOperationCompleted);
            }
            this.InvokeAsync("deleteAllBarrages", new object[0], this.deleteAllBarragesOperationCompleted, userState);
        }

        private void OndeleteAllBarragesOperationCompleted(object arg)
        {
            if ((this.deleteAllBarragesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAllBarragesCompleted(this, new deleteAllBarragesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/deleteBasevaluesOfProductByValor", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] deleteBasevaluesOfProductByValor(int Valor)
        {
            object[] results = this.Invoke("deleteBasevaluesOfProductByValor", new object[] {
                        Valor});
            return ((object[])(results[0]));
        }

        /// <remarks/>
        public void deleteBasevaluesOfProductByValorAsync(int Valor)
        {
            this.deleteBasevaluesOfProductByValorAsync(Valor, null);
        }

        /// <remarks/>
        public void deleteBasevaluesOfProductByValorAsync(int Valor, object userState)
        {
            if ((this.deleteBasevaluesOfProductByValorOperationCompleted == null))
            {
                this.deleteBasevaluesOfProductByValorOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteBasevaluesOfProductByValorOperationCompleted);
            }
            this.InvokeAsync("deleteBasevaluesOfProductByValor", new object[] {
                        Valor}, this.deleteBasevaluesOfProductByValorOperationCompleted, userState);
        }

        private void OndeleteBasevaluesOfProductByValorOperationCompleted(object arg)
        {
            if ((this.deleteBasevaluesOfProductByValorCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteBasevaluesOfProductByValorCompleted(this, new deleteBasevaluesOfProductByValorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/deleteAllBasevalues", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] deleteAllBasevalues()
        {
            object[] results = this.Invoke("deleteAllBasevalues", new object[0]);
            return ((object[])(results[0]));
        }

        /// <remarks/>
        public void deleteAllBasevaluesAsync()
        {
            this.deleteAllBasevaluesAsync(null);
        }

        /// <remarks/>
        public void deleteAllBasevaluesAsync(object userState)
        {
            if ((this.deleteAllBasevaluesOperationCompleted == null))
            {
                this.deleteAllBasevaluesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAllBasevaluesOperationCompleted);
            }
            this.InvokeAsync("deleteAllBasevalues", new object[0], this.deleteAllBasevaluesOperationCompleted, userState);
        }

        private void OndeleteAllBasevaluesOperationCompleted(object arg)
        {
            if ((this.deleteAllBasevaluesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAllBasevaluesCompleted(this, new deleteAllBasevaluesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/deleteEventsOfProductByValor", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] deleteEventsOfProductByValor(int Valor)
        {
            object[] results = this.Invoke("deleteEventsOfProductByValor", new object[] {
                        Valor});
            return ((object[])(results[0]));
        }

        /// <remarks/>
        public void deleteEventsOfProductByValorAsync(int Valor)
        {
            this.deleteEventsOfProductByValorAsync(Valor, null);
        }

        /// <remarks/>
        public void deleteEventsOfProductByValorAsync(int Valor, object userState)
        {
            if ((this.deleteEventsOfProductByValorOperationCompleted == null))
            {
                this.deleteEventsOfProductByValorOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteEventsOfProductByValorOperationCompleted);
            }
            this.InvokeAsync("deleteEventsOfProductByValor", new object[] {
                        Valor}, this.deleteEventsOfProductByValorOperationCompleted, userState);
        }

        private void OndeleteEventsOfProductByValorOperationCompleted(object arg)
        {
            if ((this.deleteEventsOfProductByValorCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteEventsOfProductByValorCompleted(this, new deleteEventsOfProductByValorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/deleteAllEvents", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] deleteAllEvents()
        {
            object[] results = this.Invoke("deleteAllEvents", new object[0]);
            return ((object[])(results[0]));
        }

        /// <remarks/>
        public void deleteAllEventsAsync()
        {
            this.deleteAllEventsAsync(null);
        }

        /// <remarks/>
        public void deleteAllEventsAsync(object userState)
        {
            if ((this.deleteAllEventsOperationCompleted == null))
            {
                this.deleteAllEventsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAllEventsOperationCompleted);
            }
            this.InvokeAsync("deleteAllEvents", new object[0], this.deleteAllEventsOperationCompleted, userState);
        }

        private void OndeleteAllEventsOperationCompleted(object arg)
        {
            if ((this.deleteAllEventsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAllEventsCompleted(this, new deleteAllEventsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/writePrice", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] writePrice(int Valor, System.DateTime Datetime, double Bid, double Ask)
        {
            object[] results = this.Invoke("writePrice", new object[] {
                        Valor,
                        Datetime,
                        Bid,
                        Ask});
            return ((object[])(results[0]));
        }

        /// <remarks/>
        public void writePriceAsync(int Valor, System.DateTime Datetime, double Bid, double Ask)
        {
            this.writePriceAsync(Valor, Datetime, Bid, Ask, null);
        }

        /// <remarks/>
        public void writePriceAsync(int Valor, System.DateTime Datetime, double Bid, double Ask, object userState)
        {
            if ((this.writePriceOperationCompleted == null))
            {
                this.writePriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwritePriceOperationCompleted);
            }
            this.InvokeAsync("writePrice", new object[] {
                        Valor,
                        Datetime,
                        Bid,
                        Ask}, this.writePriceOperationCompleted, userState);
        }

        private void OnwritePriceOperationCompleted(object arg)
        {
            if ((this.writePriceCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.writePriceCompleted(this, new writePriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/deletePricesByValor", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] deletePricesByValor(int Valor)
        {
            object[] results = this.Invoke("deletePricesByValor", new object[] {
                        Valor});
            return ((object[])(results[0]));
        }

        /// <remarks/>
        public void deletePricesByValorAsync(int Valor)
        {
            this.deletePricesByValorAsync(Valor, null);
        }

        /// <remarks/>
        public void deletePricesByValorAsync(int Valor, object userState)
        {
            if ((this.deletePricesByValorOperationCompleted == null))
            {
                this.deletePricesByValorOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeletePricesByValorOperationCompleted);
            }
            this.InvokeAsync("deletePricesByValor", new object[] {
                        Valor}, this.deletePricesByValorOperationCompleted, userState);
        }

        private void OndeletePricesByValorOperationCompleted(object arg)
        {
            if ((this.deletePricesByValorCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deletePricesByValorCompleted(this, new deletePricesByValorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/clearDatabase", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] clearDatabase(bool doDeleteFilesFromDisk)
        {
            object[] results = this.Invoke("clearDatabase", new object[] {
                        doDeleteFilesFromDisk});
            return ((object[])(results[0]));
        }

        /// <remarks/>
        public void clearDatabaseAsync(bool doDeleteFilesFromDisk)
        {
            this.clearDatabaseAsync(doDeleteFilesFromDisk, null);
        }

        /// <remarks/>
        public void clearDatabaseAsync(bool doDeleteFilesFromDisk, object userState)
        {
            if ((this.clearDatabaseOperationCompleted == null))
            {
                this.clearDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnclearDatabaseOperationCompleted);
            }
            this.InvokeAsync("clearDatabase", new object[] {
                        doDeleteFilesFromDisk}, this.clearDatabaseOperationCompleted, userState);
        }

        private void OnclearDatabaseOperationCompleted(object arg)
        {
            if ((this.clearDatabaseCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.clearDatabaseCompleted(this, new clearDatabaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/resetSystem", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] resetSystem()
        {
            object[] results = this.Invoke("resetSystem", new object[0]);
            return ((object[])(results[0]));
        }

        /// <remarks/>
        public void resetSystemAsync()
        {
            this.resetSystemAsync(null);
        }

        /// <remarks/>
        public void resetSystemAsync(object userState)
        {
            if ((this.resetSystemOperationCompleted == null))
            {
                this.resetSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnresetSystemOperationCompleted);
            }
            this.InvokeAsync("resetSystem", new object[0], this.resetSystemOperationCompleted, userState);
        }

        private void OnresetSystemOperationCompleted(object arg)
        {
            if ((this.resetSystemCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.resetSystemCompleted(this, new resetSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/writeEmittentenRatingWithLogo", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] writeEmittentenRatingWithLogo(int emittentenId, string nameBank, string ratingSp, string ratingMoody, string ratingFitch, System.DateTime dateSp, System.DateTime dateMoody, System.DateTime dateFitch, string kommentar, string kommentar_eng, string webseite, string logoFileName, [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")] byte[] byteLogo)
        {
            object[] results = this.Invoke("writeEmittentenRatingWithLogo", new object[] {
                        emittentenId,
                        nameBank,
                        ratingSp,
                        ratingMoody,
                        ratingFitch,
                        dateSp,
                        dateMoody,
                        dateFitch,
                        kommentar,
                        kommentar_eng,
                        webseite,
                        logoFileName,
                        byteLogo});
            return ((object[])(results[0]));
        }

        /// <remarks/>
        public void writeEmittentenRatingWithLogoAsync(int emittentenId, string nameBank, string ratingSp, string ratingMoody, string ratingFitch, System.DateTime dateSp, System.DateTime dateMoody, System.DateTime dateFitch, string kommentar, string kommentar_eng, string webseite, string logoFileName, byte[] byteLogo)
        {
            this.writeEmittentenRatingWithLogoAsync(emittentenId, nameBank, ratingSp, ratingMoody, ratingFitch, dateSp, dateMoody, dateFitch, kommentar, kommentar_eng, webseite, logoFileName, byteLogo, null);
        }

        /// <remarks/>
        public void writeEmittentenRatingWithLogoAsync(int emittentenId, string nameBank, string ratingSp, string ratingMoody, string ratingFitch, System.DateTime dateSp, System.DateTime dateMoody, System.DateTime dateFitch, string kommentar, string kommentar_eng, string webseite, string logoFileName, byte[] byteLogo, object userState)
        {
            if ((this.writeEmittentenRatingWithLogoOperationCompleted == null))
            {
                this.writeEmittentenRatingWithLogoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwriteEmittentenRatingWithLogoOperationCompleted);
            }
            this.InvokeAsync("writeEmittentenRatingWithLogo", new object[] {
                        emittentenId,
                        nameBank,
                        ratingSp,
                        ratingMoody,
                        ratingFitch,
                        dateSp,
                        dateMoody,
                        dateFitch,
                        kommentar,
                        kommentar_eng,
                        webseite,
                        logoFileName,
                        byteLogo}, this.writeEmittentenRatingWithLogoOperationCompleted, userState);
        }

        private void OnwriteEmittentenRatingWithLogoOperationCompleted(object arg)
        {
            if ((this.writeEmittentenRatingWithLogoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.writeEmittentenRatingWithLogoCompleted(this, new writeEmittentenRatingWithLogoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/updateEmittentenRatingForID", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] updateEmittentenRatingForID(int emittentenId, string ratingSp, string ratingMoody, string ratingFitch, System.DateTime dateSp, System.DateTime dateMoody, System.DateTime dateFitch)
        {
            object[] results = this.Invoke("updateEmittentenRatingForID", new object[] {
                        emittentenId,
                        ratingSp,
                        ratingMoody,
                        ratingFitch,
                        dateSp,
                        dateMoody,
                        dateFitch});
            return ((object[])(results[0]));
        }

        /// <remarks/>
        public void updateEmittentenRatingForIDAsync(int emittentenId, string ratingSp, string ratingMoody, string ratingFitch, System.DateTime dateSp, System.DateTime dateMoody, System.DateTime dateFitch)
        {
            this.updateEmittentenRatingForIDAsync(emittentenId, ratingSp, ratingMoody, ratingFitch, dateSp, dateMoody, dateFitch, null);
        }

        /// <remarks/>
        public void updateEmittentenRatingForIDAsync(int emittentenId, string ratingSp, string ratingMoody, string ratingFitch, System.DateTime dateSp, System.DateTime dateMoody, System.DateTime dateFitch, object userState)
        {
            if ((this.updateEmittentenRatingForIDOperationCompleted == null))
            {
                this.updateEmittentenRatingForIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateEmittentenRatingForIDOperationCompleted);
            }
            this.InvokeAsync("updateEmittentenRatingForID", new object[] {
                        emittentenId,
                        ratingSp,
                        ratingMoody,
                        ratingFitch,
                        dateSp,
                        dateMoody,
                        dateFitch}, this.updateEmittentenRatingForIDOperationCompleted, userState);
        }

        private void OnupdateEmittentenRatingForIDOperationCompleted(object arg)
        {
            if ((this.updateEmittentenRatingForIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateEmittentenRatingForIDCompleted(this, new updateEmittentenRatingForIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/deleteEmittentenRatingForName", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] deleteEmittentenRatingForName(string nameBank, bool deleteLogoFromDisk)
        {
            object[] results = this.Invoke("deleteEmittentenRatingForName", new object[] {
                        nameBank,
                        deleteLogoFromDisk});
            return ((object[])(results[0]));
        }

        /// <remarks/>
        public void deleteEmittentenRatingForNameAsync(string nameBank, bool deleteLogoFromDisk)
        {
            this.deleteEmittentenRatingForNameAsync(nameBank, deleteLogoFromDisk, null);
        }

        /// <remarks/>
        public void deleteEmittentenRatingForNameAsync(string nameBank, bool deleteLogoFromDisk, object userState)
        {
            if ((this.deleteEmittentenRatingForNameOperationCompleted == null))
            {
                this.deleteEmittentenRatingForNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteEmittentenRatingForNameOperationCompleted);
            }
            this.InvokeAsync("deleteEmittentenRatingForName", new object[] {
                        nameBank,
                        deleteLogoFromDisk}, this.deleteEmittentenRatingForNameOperationCompleted, userState);
        }

        private void OndeleteEmittentenRatingForNameOperationCompleted(object arg)
        {
            if ((this.deleteEmittentenRatingForNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteEmittentenRatingForNameCompleted(this, new deleteEmittentenRatingForNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/deleteEmittentenRatingForID", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] deleteEmittentenRatingForID(int emittentenId, bool deleteLogoFromDisk)
        {
            object[] results = this.Invoke("deleteEmittentenRatingForID", new object[] {
                        emittentenId,
                        deleteLogoFromDisk});
            return ((object[])(results[0]));
        }

        /// <remarks/>
        public void deleteEmittentenRatingForIDAsync(int emittentenId, bool deleteLogoFromDisk)
        {
            this.deleteEmittentenRatingForIDAsync(emittentenId, deleteLogoFromDisk, null);
        }

        /// <remarks/>
        public void deleteEmittentenRatingForIDAsync(int emittentenId, bool deleteLogoFromDisk, object userState)
        {
            if ((this.deleteEmittentenRatingForIDOperationCompleted == null))
            {
                this.deleteEmittentenRatingForIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteEmittentenRatingForIDOperationCompleted);
            }
            this.InvokeAsync("deleteEmittentenRatingForID", new object[] {
                        emittentenId,
                        deleteLogoFromDisk}, this.deleteEmittentenRatingForIDOperationCompleted, userState);
        }

        private void OndeleteEmittentenRatingForIDOperationCompleted(object arg)
        {
            if ((this.deleteEmittentenRatingForIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteEmittentenRatingForIDCompleted(this, new deleteEmittentenRatingForIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/deleteAllEmittentenRatings", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] deleteAllEmittentenRatings(bool deleteLogosFromDisk)
        {
            object[] results = this.Invoke("deleteAllEmittentenRatings", new object[] {
                        deleteLogosFromDisk});
            return ((object[])(results[0]));
        }

        /// <remarks/>
        public void deleteAllEmittentenRatingsAsync(bool deleteLogosFromDisk)
        {
            this.deleteAllEmittentenRatingsAsync(deleteLogosFromDisk, null);
        }

        /// <remarks/>
        public void deleteAllEmittentenRatingsAsync(bool deleteLogosFromDisk, object userState)
        {
            if ((this.deleteAllEmittentenRatingsOperationCompleted == null))
            {
                this.deleteAllEmittentenRatingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAllEmittentenRatingsOperationCompleted);
            }
            this.InvokeAsync("deleteAllEmittentenRatings", new object[] {
                        deleteLogosFromDisk}, this.deleteAllEmittentenRatingsOperationCompleted, userState);
        }

        private void OndeleteAllEmittentenRatingsOperationCompleted(object arg)
        {
            if ((this.deleteAllEmittentenRatingsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAllEmittentenRatingsCompleted(this, new deleteAllEmittentenRatingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/deleteAllEmittentenRatingLogosFromDisk", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] deleteAllEmittentenRatingLogosFromDisk(bool clearDBReference)
        {
            object[] results = this.Invoke("deleteAllEmittentenRatingLogosFromDisk", new object[] {
                        clearDBReference});
            return ((object[])(results[0]));
        }

        /// <remarks/>
        public void deleteAllEmittentenRatingLogosFromDiskAsync(bool clearDBReference)
        {
            this.deleteAllEmittentenRatingLogosFromDiskAsync(clearDBReference, null);
        }

        /// <remarks/>
        public void deleteAllEmittentenRatingLogosFromDiskAsync(bool clearDBReference, object userState)
        {
            if ((this.deleteAllEmittentenRatingLogosFromDiskOperationCompleted == null))
            {
                this.deleteAllEmittentenRatingLogosFromDiskOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAllEmittentenRatingLogosFromDiskOperationCompleted);
            }
            this.InvokeAsync("deleteAllEmittentenRatingLogosFromDisk", new object[] {
                        clearDBReference}, this.deleteAllEmittentenRatingLogosFromDiskOperationCompleted, userState);
        }

        private void OndeleteAllEmittentenRatingLogosFromDiskOperationCompleted(object arg)
        {
            if ((this.deleteAllEmittentenRatingLogosFromDiskCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAllEmittentenRatingLogosFromDiskCompleted(this, new deleteAllEmittentenRatingLogosFromDiskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/deleteAllEmittentenRatingLogosNotInDB", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] deleteAllEmittentenRatingLogosNotInDB()
        {
            object[] results = this.Invoke("deleteAllEmittentenRatingLogosNotInDB", new object[0]);
            return ((object[])(results[0]));
        }

        /// <remarks/>
        public void deleteAllEmittentenRatingLogosNotInDBAsync()
        {
            this.deleteAllEmittentenRatingLogosNotInDBAsync(null);
        }

        /// <remarks/>
        public void deleteAllEmittentenRatingLogosNotInDBAsync(object userState)
        {
            if ((this.deleteAllEmittentenRatingLogosNotInDBOperationCompleted == null))
            {
                this.deleteAllEmittentenRatingLogosNotInDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAllEmittentenRatingLogosNotInDBOperationCompleted);
            }
            this.InvokeAsync("deleteAllEmittentenRatingLogosNotInDB", new object[0], this.deleteAllEmittentenRatingLogosNotInDBOperationCompleted, userState);
        }

        private void OndeleteAllEmittentenRatingLogosNotInDBOperationCompleted(object arg)
        {
            if ((this.deleteAllEmittentenRatingLogosNotInDBCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAllEmittentenRatingLogosNotInDBCompleted(this, new deleteAllEmittentenRatingLogosNotInDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/isValidFileSize", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool isValidFileSize(long fileSize)
        {
            object[] results = this.Invoke("isValidFileSize", new object[] {
                        fileSize});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void isValidFileSizeAsync(long fileSize)
        {
            this.isValidFileSizeAsync(fileSize, null);
        }

        /// <remarks/>
        public void isValidFileSizeAsync(long fileSize, object userState)
        {
            if ((this.isValidFileSizeOperationCompleted == null))
            {
                this.isValidFileSizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisValidFileSizeOperationCompleted);
            }
            this.InvokeAsync("isValidFileSize", new object[] {
                        fileSize}, this.isValidFileSizeOperationCompleted, userState);
        }

        private void OnisValidFileSizeOperationCompleted(object arg)
        {
            if ((this.isValidFileSizeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isValidFileSizeCompleted(this, new isValidFileSizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/getMaxFileSize", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long getMaxFileSize()
        {
            object[] results = this.Invoke("getMaxFileSize", new object[0]);
            return ((long)(results[0]));
        }

        /// <remarks/>
        public void getMaxFileSizeAsync()
        {
            this.getMaxFileSizeAsync(null);
        }

        /// <remarks/>
        public void getMaxFileSizeAsync(object userState)
        {
            if ((this.getMaxFileSizeOperationCompleted == null))
            {
                this.getMaxFileSizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMaxFileSizeOperationCompleted);
            }
            this.InvokeAsync("getMaxFileSize", new object[0], this.getMaxFileSizeOperationCompleted, userState);
        }

        private void OngetMaxFileSizeOperationCompleted(object arg)
        {
            if ((this.getMaxFileSizeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMaxFileSizeCompleted(this, new getMaxFileSizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/isValidExtension", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool isValidExtension(string Filename)
        {
            object[] results = this.Invoke("isValidExtension", new object[] {
                        Filename});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void isValidExtensionAsync(string Filename)
        {
            this.isValidExtensionAsync(Filename, null);
        }

        /// <remarks/>
        public void isValidExtensionAsync(string Filename, object userState)
        {
            if ((this.isValidExtensionOperationCompleted == null))
            {
                this.isValidExtensionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisValidExtensionOperationCompleted);
            }
            this.InvokeAsync("isValidExtension", new object[] {
                        Filename}, this.isValidExtensionOperationCompleted, userState);
        }

        private void OnisValidExtensionOperationCompleted(object arg)
        {
            if ((this.isValidExtensionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isValidExtensionCompleted(this, new isValidExtensionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/getValidExtensions", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getValidExtensions()
        {
            object[] results = this.Invoke("getValidExtensions", new object[0]);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void getValidExtensionsAsync()
        {
            this.getValidExtensionsAsync(null);
        }

        /// <remarks/>
        public void getValidExtensionsAsync(object userState)
        {
            if ((this.getValidExtensionsOperationCompleted == null))
            {
                this.getValidExtensionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetValidExtensionsOperationCompleted);
            }
            this.InvokeAsync("getValidExtensions", new object[0], this.getValidExtensionsOperationCompleted, userState);
        }

        private void OngetValidExtensionsOperationCompleted(object arg)
        {
            if ((this.getValidExtensionsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getValidExtensionsCompleted(this, new getValidExtensionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/saveFile", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] saveFile(int Valor, string Bezeichnung, string Dateiname, int SortOrder, [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")] byte[] byteFile)
        {
            object[] results = this.Invoke("saveFile", new object[] {
                        Valor,
                        Bezeichnung,
                        Dateiname,
                        SortOrder,
                        byteFile});
            return ((object[])(results[0]));
        }

        /// <remarks/>
        public void saveFileAsync(int Valor, string Bezeichnung, string Dateiname, int SortOrder, byte[] byteFile)
        {
            this.saveFileAsync(Valor, Bezeichnung, Dateiname, SortOrder, byteFile, null);
        }

        /// <remarks/>
        public void saveFileAsync(int Valor, string Bezeichnung, string Dateiname, int SortOrder, byte[] byteFile, object userState)
        {
            if ((this.saveFileOperationCompleted == null))
            {
                this.saveFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveFileOperationCompleted);
            }
            this.InvokeAsync("saveFile", new object[] {
                        Valor,
                        Bezeichnung,
                        Dateiname,
                        SortOrder,
                        byteFile}, this.saveFileOperationCompleted, userState);
        }

        private void OnsaveFileOperationCompleted(object arg)
        {
            if ((this.saveFileCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveFileCompleted(this, new saveFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/deleteFileByID", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] deleteFileByID(int ID)
        {
            object[] results = this.Invoke("deleteFileByID", new object[] {
                        ID});
            return ((object[])(results[0]));
        }

        /// <remarks/>
        public void deleteFileByIDAsync(int ID)
        {
            this.deleteFileByIDAsync(ID, null);
        }

        /// <remarks/>
        public void deleteFileByIDAsync(int ID, object userState)
        {
            if ((this.deleteFileByIDOperationCompleted == null))
            {
                this.deleteFileByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteFileByIDOperationCompleted);
            }
            this.InvokeAsync("deleteFileByID", new object[] {
                        ID}, this.deleteFileByIDOperationCompleted, userState);
        }

        private void OndeleteFileByIDOperationCompleted(object arg)
        {
            if ((this.deleteFileByIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteFileByIDCompleted(this, new deleteFileByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/deleteFileByServerName", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] deleteFileByServerName(string FileName)
        {
            object[] results = this.Invoke("deleteFileByServerName", new object[] {
                        FileName});
            return ((object[])(results[0]));
        }

        /// <remarks/>
        public void deleteFileByServerNameAsync(string FileName)
        {
            this.deleteFileByServerNameAsync(FileName, null);
        }

        /// <remarks/>
        public void deleteFileByServerNameAsync(string FileName, object userState)
        {
            if ((this.deleteFileByServerNameOperationCompleted == null))
            {
                this.deleteFileByServerNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteFileByServerNameOperationCompleted);
            }
            this.InvokeAsync("deleteFileByServerName", new object[] {
                        FileName}, this.deleteFileByServerNameOperationCompleted, userState);
        }

        private void OndeleteFileByServerNameOperationCompleted(object arg)
        {
            if ((this.deleteFileByServerNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteFileByServerNameCompleted(this, new deleteFileByServerNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/deleteFileByOriginalName", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] deleteFileByOriginalName(string FileName)
        {
            object[] results = this.Invoke("deleteFileByOriginalName", new object[] {
                        FileName});
            return ((object[])(results[0]));
        }

        /// <remarks/>
        public void deleteFileByOriginalNameAsync(string FileName)
        {
            this.deleteFileByOriginalNameAsync(FileName, null);
        }

        /// <remarks/>
        public void deleteFileByOriginalNameAsync(string FileName, object userState)
        {
            if ((this.deleteFileByOriginalNameOperationCompleted == null))
            {
                this.deleteFileByOriginalNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteFileByOriginalNameOperationCompleted);
            }
            this.InvokeAsync("deleteFileByOriginalName", new object[] {
                        FileName}, this.deleteFileByOriginalNameOperationCompleted, userState);
        }

        private void OndeleteFileByOriginalNameOperationCompleted(object arg)
        {
            if ((this.deleteFileByOriginalNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteFileByOriginalNameCompleted(this, new deleteFileByOriginalNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/deleteAllDBFiles", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] deleteAllDBFiles()
        {
            object[] results = this.Invoke("deleteAllDBFiles", new object[0]);
            return ((object[])(results[0]));
        }

        /// <remarks/>
        public void deleteAllDBFilesAsync()
        {
            this.deleteAllDBFilesAsync(null);
        }

        /// <remarks/>
        public void deleteAllDBFilesAsync(object userState)
        {
            if ((this.deleteAllDBFilesOperationCompleted == null))
            {
                this.deleteAllDBFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAllDBFilesOperationCompleted);
            }
            this.InvokeAsync("deleteAllDBFiles", new object[0], this.deleteAllDBFilesOperationCompleted, userState);
        }

        private void OndeleteAllDBFilesOperationCompleted(object arg)
        {
            if ((this.deleteAllDBFilesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAllDBFilesCompleted(this, new deleteAllDBFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/deleteAllFilesNotInDB", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] deleteAllFilesNotInDB()
        {
            object[] results = this.Invoke("deleteAllFilesNotInDB", new object[0]);
            return ((object[])(results[0]));
        }

        /// <remarks/>
        public void deleteAllFilesNotInDBAsync()
        {
            this.deleteAllFilesNotInDBAsync(null);
        }

        /// <remarks/>
        public void deleteAllFilesNotInDBAsync(object userState)
        {
            if ((this.deleteAllFilesNotInDBOperationCompleted == null))
            {
                this.deleteAllFilesNotInDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAllFilesNotInDBOperationCompleted);
            }
            this.InvokeAsync("deleteAllFilesNotInDB", new object[0], this.deleteAllFilesNotInDBOperationCompleted, userState);
        }

        private void OndeleteAllFilesNotInDBOperationCompleted(object arg)
        {
            if ((this.deleteAllFilesNotInDBCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAllFilesNotInDBCompleted(this, new deleteAllFilesNotInDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/deleteAllFilesOfProduct", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] deleteAllFilesOfProduct(int Valor)
        {
            object[] results = this.Invoke("deleteAllFilesOfProduct", new object[] {
                        Valor});
            return ((object[])(results[0]));
        }

        /// <remarks/>
        public void deleteAllFilesOfProductAsync(int Valor)
        {
            this.deleteAllFilesOfProductAsync(Valor, null);
        }

        /// <remarks/>
        public void deleteAllFilesOfProductAsync(int Valor, object userState)
        {
            if ((this.deleteAllFilesOfProductOperationCompleted == null))
            {
                this.deleteAllFilesOfProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAllFilesOfProductOperationCompleted);
            }
            this.InvokeAsync("deleteAllFilesOfProduct", new object[] {
                        Valor}, this.deleteAllFilesOfProductOperationCompleted, userState);
        }

        private void OndeleteAllFilesOfProductOperationCompleted(object arg)
        {
            if ((this.deleteAllFilesOfProductCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAllFilesOfProductCompleted(this, new deleteAllFilesOfProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/deleteAllFiles", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] deleteAllFiles()
        {
            object[] results = this.Invoke("deleteAllFiles", new object[0]);
            return ((object[])(results[0]));
        }

        /// <remarks/>
        public void deleteAllFilesAsync()
        {
            this.deleteAllFilesAsync(null);
        }

        /// <remarks/>
        public void deleteAllFilesAsync(object userState)
        {
            if ((this.deleteAllFilesOperationCompleted == null))
            {
                this.deleteAllFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAllFilesOperationCompleted);
            }
            this.InvokeAsync("deleteAllFiles", new object[0], this.deleteAllFilesOperationCompleted, userState);
        }

        private void OndeleteAllFilesOperationCompleted(object arg)
        {
            if ((this.deleteAllFilesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAllFilesCompleted(this, new deleteAllFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/Login", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Login(string UserName, string Password)
        {
            object[] results = this.Invoke("Login", new object[] {
                        UserName,
                        Password});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void LoginAsync(string UserName, string Password)
        {
            this.LoginAsync(UserName, Password, null);
        }

        /// <remarks/>
        public void LoginAsync(string UserName, string Password, object userState)
        {
            if ((this.LoginOperationCompleted == null))
            {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        UserName,
                        Password}, this.LoginOperationCompleted, userState);
        }

        private void OnLoginOperationCompleted(object arg)
        {
            if ((this.LoginCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/GetLoginStatus", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLoginStatus()
        {
            object[] results = this.Invoke("GetLoginStatus", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetLoginStatusAsync()
        {
            this.GetLoginStatusAsync(null);
        }

        /// <remarks/>
        public void GetLoginStatusAsync(object userState)
        {
            if ((this.GetLoginStatusOperationCompleted == null))
            {
                this.GetLoginStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoginStatusOperationCompleted);
            }
            this.InvokeAsync("GetLoginStatus", new object[0], this.GetLoginStatusOperationCompleted, userState);
        }

        private void OnGetLoginStatusOperationCompleted(object arg)
        {
            if ((this.GetLoginStatusCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLoginStatusCompleted(this, new GetLoginStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/isLoggedIn", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool isLoggedIn()
        {
            object[] results = this.Invoke("isLoggedIn", new object[0]);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void isLoggedInAsync()
        {
            this.isLoggedInAsync(null);
        }

        /// <remarks/>
        public void isLoggedInAsync(object userState)
        {
            if ((this.isLoggedInOperationCompleted == null))
            {
                this.isLoggedInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisLoggedInOperationCompleted);
            }
            this.InvokeAsync("isLoggedIn", new object[0], this.isLoggedInOperationCompleted, userState);
        }

        private void OnisLoggedInOperationCompleted(object arg)
        {
            if ((this.isLoggedInCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isLoggedInCompleted(this, new isLoggedInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cat-financial-files.ch/Logout", RequestNamespace = "http://www.cat-financial-files.ch", ResponseNamespace = "http://www.cat-financial-files.ch", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Logout()
        {
            object[] results = this.Invoke("Logout", new object[0]);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void LogoutAsync()
        {
            this.LogoutAsync(null);
        }

        /// <remarks/>
        public void LogoutAsync(object userState)
        {
            if ((this.LogoutOperationCompleted == null))
            {
                this.LogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoutOperationCompleted);
            }
            this.InvokeAsync("Logout", new object[0], this.LogoutOperationCompleted, userState);
        }

        private void OnLogoutOperationCompleted(object arg)
        {
            if ((this.LogoutCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogoutCompleted(this, new LogoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }

        private bool IsLocalFileSystemWebService(string url)
        {
            if (((url == null)
                        || (url == string.Empty)))
            {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024)
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0)))
            {
                return true;
            }
            return false;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void writeProductCompletedEventHandler(object sender, writeProductCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class writeProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal writeProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void writeProductV2CompletedEventHandler(object sender, writeProductV2CompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class writeProductV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal writeProductV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void writeBarrageCompletedEventHandler(object sender, writeBarrageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class writeBarrageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal writeBarrageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void writeBasevalueCompletedEventHandler(object sender, writeBasevalueCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class writeBasevalueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal writeBasevalueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void writeEventCompletedEventHandler(object sender, writeEventCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class writeEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal writeEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteProductByIDCompletedEventHandler(object sender, deleteProductByIDCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteProductByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal deleteProductByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteProductByValorCompletedEventHandler(object sender, deleteProductByValorCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteProductByValorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal deleteProductByValorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteBarrageOfProductByValorCompletedEventHandler(object sender, deleteBarrageOfProductByValorCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteBarrageOfProductByValorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal deleteBarrageOfProductByValorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteAllBarragesCompletedEventHandler(object sender, deleteAllBarragesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAllBarragesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal deleteAllBarragesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteBasevaluesOfProductByValorCompletedEventHandler(object sender, deleteBasevaluesOfProductByValorCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteBasevaluesOfProductByValorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal deleteBasevaluesOfProductByValorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteAllBasevaluesCompletedEventHandler(object sender, deleteAllBasevaluesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAllBasevaluesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal deleteAllBasevaluesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteEventsOfProductByValorCompletedEventHandler(object sender, deleteEventsOfProductByValorCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteEventsOfProductByValorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal deleteEventsOfProductByValorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteAllEventsCompletedEventHandler(object sender, deleteAllEventsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAllEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal deleteAllEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void writePriceCompletedEventHandler(object sender, writePriceCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class writePriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal writePriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deletePricesByValorCompletedEventHandler(object sender, deletePricesByValorCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deletePricesByValorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal deletePricesByValorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void clearDatabaseCompletedEventHandler(object sender, clearDatabaseCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class clearDatabaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal clearDatabaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void resetSystemCompletedEventHandler(object sender, resetSystemCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class resetSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal resetSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void writeEmittentenRatingWithLogoCompletedEventHandler(object sender, writeEmittentenRatingWithLogoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class writeEmittentenRatingWithLogoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal writeEmittentenRatingWithLogoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void updateEmittentenRatingForIDCompletedEventHandler(object sender, updateEmittentenRatingForIDCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateEmittentenRatingForIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal updateEmittentenRatingForIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteEmittentenRatingForNameCompletedEventHandler(object sender, deleteEmittentenRatingForNameCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteEmittentenRatingForNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal deleteEmittentenRatingForNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteEmittentenRatingForIDCompletedEventHandler(object sender, deleteEmittentenRatingForIDCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteEmittentenRatingForIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal deleteEmittentenRatingForIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteAllEmittentenRatingsCompletedEventHandler(object sender, deleteAllEmittentenRatingsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAllEmittentenRatingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal deleteAllEmittentenRatingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteAllEmittentenRatingLogosFromDiskCompletedEventHandler(object sender, deleteAllEmittentenRatingLogosFromDiskCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAllEmittentenRatingLogosFromDiskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal deleteAllEmittentenRatingLogosFromDiskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteAllEmittentenRatingLogosNotInDBCompletedEventHandler(object sender, deleteAllEmittentenRatingLogosNotInDBCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAllEmittentenRatingLogosNotInDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal deleteAllEmittentenRatingLogosNotInDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void isValidFileSizeCompletedEventHandler(object sender, isValidFileSizeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isValidFileSizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal isValidFileSizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getMaxFileSizeCompletedEventHandler(object sender, getMaxFileSizeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMaxFileSizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal getMaxFileSizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public long Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void isValidExtensionCompletedEventHandler(object sender, isValidExtensionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isValidExtensionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal isValidExtensionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getValidExtensionsCompletedEventHandler(object sender, getValidExtensionsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getValidExtensionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal getValidExtensionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void saveFileCompletedEventHandler(object sender, saveFileCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal saveFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteFileByIDCompletedEventHandler(object sender, deleteFileByIDCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteFileByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal deleteFileByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteFileByServerNameCompletedEventHandler(object sender, deleteFileByServerNameCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteFileByServerNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal deleteFileByServerNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteFileByOriginalNameCompletedEventHandler(object sender, deleteFileByOriginalNameCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteFileByOriginalNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal deleteFileByOriginalNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteAllDBFilesCompletedEventHandler(object sender, deleteAllDBFilesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAllDBFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal deleteAllDBFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteAllFilesNotInDBCompletedEventHandler(object sender, deleteAllFilesNotInDBCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAllFilesNotInDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal deleteAllFilesNotInDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteAllFilesOfProductCompletedEventHandler(object sender, deleteAllFilesOfProductCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAllFilesOfProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal deleteAllFilesOfProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void deleteAllFilesCompletedEventHandler(object sender, deleteAllFilesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAllFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal deleteAllFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public object[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetLoginStatusCompletedEventHandler(object sender, GetLoginStatusCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLoginStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal GetLoginStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void isLoggedInCompletedEventHandler(object sender, isLoggedInCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isLoggedInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal isLoggedInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LogoutCompletedEventHandler(object sender, LogoutCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        internal LogoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591